apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.ar.sceneform.plugin'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.gpetuhov.android.samplearcore"

        // Sceneform requires minSdkVersion >= 24.
        minSdkVersion 24

        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Sceneform libraries use language constructs from Java 8.
    // Add these compile options if targeting minSdkVersion < 26.
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // Provides ArFragment, and other UX resources.
    // In this sample we will use it for convenience.
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.7.0'

    // Alternatively, use ArSceneView without the UX dependency.
//    implementation 'com.google.ar.sceneform:core:1.7.0'

    // KAndroid
    implementation 'com.pawegio.kandroid:kandroid:0.8.8@aar'
}

// This is added automatically by Sceneform plugin.
// To do it:
// 1. Install Sceneform plugin:
// 1.1. Android Studio -> Preferences -> Plugins
// 1.2. Browse repositoriesâ€¦ -> Search Google Sceneform Tools
// 1.3. Install
// 2. Create directory sampledata/models
// 3. Copy 3D model files into it (obj, mtl and images)
// 3.1. Files must have no spaces in their names
// 3.2. In case of spaces, rename mtl and obj files,
// then open obj file and change mtl file name reference inside it (at the start of the file)
// 4. Right-click on the obj file -> Import Sceneform Asset
// 5. Set .sfa Output Path to sampledata/models
// 6. Set .sfb Output Path to src/main/res/raw
// 7. This will create 2 files: sfa and sfb
// 8. Now we can reference our model as R.raw.model_name
// 9. To change initial size of the model in the scene, open sfa file and change scale value
sceneform.asset('sampledata/models/sentinel_aiming.obj',
        'default',
        'sampledata/models/sentinel_aiming.sfa',
        'src/main/res/raw/sentinel_aiming')